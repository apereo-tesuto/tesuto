#collegeadaptor.router.protocol=https
#collegeadaptor.router.host=course-exchange-router-qa.ccctechcenter.org
#collegeadaptor.router.port=443

#college_adaptor.security.oauth2.client.client-id=course-exchange-college-adaptor-client
#college_adaptor.security.oauth2.client.client-secret=bde935dd-40da-4991-b002-d2c0a6901749
#college_adaptor.security.oauth2.client.access-token-uri=https://course-exchange-oauth2-qa.ccctechcenter.org:443/v1/token

# Logging level
logging.level.=INFO
logging.level.org.springframework=WARN
logging.level.org.cccnext.tesuto=INFO

JDBC_URL_PLACEMENT=jdbc:postgresql://assess-db.{{AWS_ENV}}.assess.ccc.aws:5432/tesuto_placement
JDBC_USER_PLACEMENT=tesuto_placement
JDBC_PASSWORD_PLACEMENT=[[[tesuto_placement_password env={{AWS_ENV}}]]]

REDIS_HOST_NAME=redis.{{AWS_ENV}}.assess.ccc.aws
REDIS_PORT=6379

MONGO_HOST_1=mongo-1.{{AWS_ENV}}.assess.ccc.aws
MONGO_PORT_1=27017
MONGO_HOST_2=mongo-2.{{AWS_ENV}}.assess.ccc.aws
MONGO_PORT_2=27017
MONGO_HOST_3=mongo-3.{{AWS_ENV}}.assess.ccc.aws
MONGO_DBNAME=tesuto
MONGO_PORT=27017
MONGO_USER=tesuto
MONGO_PASSWORD=[[[assess_tesuto_mongo_password]]]
MONGO_AUTHENTICATION_DBNAME=tesuto

spring.data.mongodb.host=${MONGO_HOST_1}
spring.data.mongodb.port=${MONGO_PORT_1}
spring.data.mongodb.database=${MONGO_DBNAME}
spring.data.mongodb.password=${MONGO_PASSWORD}
spring.data.mongodb.authentication-database=${MONGO_AUTHENTICATION_DBNAME}

# If "aws-queue" is active the app will attempt to use listener and publishers that access aws while,
# "embedded-queue" will use elasticmq for queue.
spring.profiles.active=aws-queue

server.port=8443
http.port=8080
server.servlet.context-path=/placement-service

# sqs configuration
aws.messages.endpoint=https://sqs.us-west-2.amazonaws.com/
aws.multiple.measure.request.queue.url={{multiple-measures-queue-url}}
aws.application.notification.queue.url={{application-notification-queue-url}}

placement.notification.topic={{placement-complete-topic}}

region=us-west-2
wait.time=20
maxRetries=24
retryDelaySeconds=3600

# OpenID configuration.
openid.base.endpoint=http://{{MitreDomainName}}/f
openid.client.id=tesuto_api
openid.client.secret=2b4af75b-a77b-45cf-baee-e316ac2f6eb6
idp.eppnservice.url=${openid.base.endpoint}


# Remote web service endpoints.
tesuto.service.host=={{AssessDomain}}
admin.http.port=
admin.server.port=
ui.http.port=
i.server.port=
placement.http.port=
placement.server.port=
rules.http.port=
rules.server.port=
