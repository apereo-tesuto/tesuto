[
	{
		"id": "d9408edb-3dd6-458f-89bc-1172b8aa0586",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "2c1e0c79-eb67-403d-bfb9-94f2d2fd09c1",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "2705294b-d058-4d7a-9f81-9a34a3c2fecf",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Reading Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "Execute the statewide MMAP Reading decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"8e299175-f678-4994-8642-a3dd69b7895c"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "4ec0bde8-f6a7-49cc-a34c-919d241faf27",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP ESL Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "Execute the statewide MMAP ESL decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"203061a8-e5ce-4a45-b64c-aaae2e8cab20"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "da0f3467-6170-4cdb-a84e-de1c3423c0df",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "a80b04eb-5756-4d62-97bf-00fac3477cdf",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP English Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "Execute the statewide MMAP English decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"3b737ac2-9979-45d7-a2d6-e71517452eb6"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "8814f635-fafb-4271-a6ee-858a210d42d2",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Mathematics Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "Execute the statewide MMAP Mathematics decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"19819a51-9d9c-45a1-a1d2-807f8e0548ad"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "fd30a389-2b10-4444-8531-2a8a9402180c",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP English Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "Execute the statewide MMAP English decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"3b737ac2-9979-45d7-a2d6-e71517452eb6"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "bb54e30f-f10b-4c52-a22a-f6cb40ba1e73",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP ESL Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "Execute the statewide MMAP ESL decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"203061a8-e5ce-4a45-b64c-aaae2e8cab20"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "f6a686f3-fd3f-4ec0-aa5f-df66fc46ba8f",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "39c1f47a-72d2-4896-b91a-61d2a7022313",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Mathematics Decision Logic - Variant",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "<p>Execute the statewide MMAP Mathematics decision logic to generate the Multiple Measures, High School Transcript based placement component</p>\n<p>This rule set has been specifically adjusted for QA testiong.</p>",
		"ruleSetRowIds": [
			"5cfec339-f1f4-4375-9148-085bb324e4f5"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "68fcfd19-0130-4475-a3d2-53f1e232f6a0",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "cb2b0cfd-6510-4ad4-8cf5-512c3d911c7a",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "46f8acca-747a-4110-bc38-31cbbdfea192",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "8370cd4c-11ca-46ea-a2ac-64ce70b43ac4",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "f605a066-23a0-4b65-93a3-35998c4db218",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Mathematics Decision Logic - TXT",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "Execute the statewide MMAP Mathematics decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"19819a51-9d9c-45a1-a1d2-807f8e0548ad"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "52267b7d-6aa3-43bc-b1da-27b928abb9b8",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "191e5c85-c96f-48b9-93b8-63fc00be9c39",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP English Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "Execute the statewide MMAP English decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"3b737ac2-9979-45d7-a2d6-e71517452eb6"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "dd5e4cb3-f107-42aa-a329-59ec853bd283",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "054bf032-9527-4d64-a8c5-45161bf6f059",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "354ce557-c75f-426c-b2c0-dbf7427a5bee",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Mathematics Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "Execute the statewide MMAP Mathematics decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"19819a51-9d9c-45a1-a1d2-807f8e0548ad"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "7efecb1c-f685-40c8-87dc-5ab0e47d2fdb",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Mathematics Decision Logic - Variant",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "<p>Execute the statewide MMAP Mathematics decision logic to generate the Multiple Measures, High School Transcript based placement component</p>\n<p>This rule set has been specifically adjusted for QA testiong.</p>",
		"ruleSetRowIds": [
			"5cfec339-f1f4-4375-9148-085bb324e4f5"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "63c69b73-de4b-4a5f-99ab-cf2fbe1303b7",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP ESL Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "Execute the statewide MMAP ESL decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"203061a8-e5ce-4a45-b64c-aaae2e8cab20"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "5529c384-2898-40a3-9ca7-85975ba6ad23",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "cdb2702f-5478-4282-8895-359b16d409c0",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Reading Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "Execute the statewide MMAP Reading decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"8e299175-f678-4994-8642-a3dd69b7895c"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "9a324e45-075c-4b8f-b118-9ad1c9a107cb",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "9c9ae00a-817e-4625-9c62-f7d949e02b52",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "47185ccd-efaf-44de-8ef0-f1664f512827",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "MATH",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "ca8ce811-4ee3-4d1a-a68b-874470967e80",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Default Assigned Placement Logic",
		"status": "published",
		"event": "ASSIGNED_PLACEMENT",
		"category": "mmAssignedPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "When evaluating multiple Placements that exist for a student, the Assigned Placement decision logic selects the Placement that is the highest course into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport org.cccnext.tesuto.placement.view.PlacementViewDto\nimport org.cccnext.tesuto.placement.view.AssignedPlacementRulesSourceDto\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENTS_KEY\n\n// Assigned Placement\nrule \"rule_set_id:${rule_set_id}::rule_id:da181d3c-e1f5-494f-bd9c-165adc71d3bd\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(\"RULE_SET_ID\")\n    placementsView : AssignedPlacementRulesSourceDto(placements : placements) from map.get(PLACEMENTS_KEY())\n    eval(placements.size() > 0)\n    bestPlacement : PlacementViewDto() from getHighestAndBestPlacementFromList(placementsView.placements)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        bestPlacement.setAssigned(true);\n        bestPlacement.setAssignedDate(new Date());\n        bestPlacement.setAssignedRuleSetId(ruleSetId);\n        RulesAction action = new RulesAction(\"ASSIGNED_PLACEMENT_ACTION\");\n        action.addActionParameter(\"assignedPlacement\", bestPlacement);\n        actions.add(action);\nend",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result\nruleSetId,placement,placement,placement,placement,placement,placement,placement,placement,placement,placement,id,cb21Code,cb21Level,createdOn,isAssigned,assignedRuleSetId\n${rule_set_id},1:E:5:2017-05-01,,,,,,,,,,1,E,5,2017-05-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,,,,,,4,C,3,2017-06-01,true,${rule_set_id}\n${rule_set_id},1:E:5:2017-05-01,2:D:4:2017-03-01,3:C:3:2017-02-01,4:C:3:2017-06-01,5:E:5:2017-01-01,6:B:2:2017-08-01,7:Y:0:2017-07-07,8:A:1:2017-03-03,9:C:3:2017-08-08,10:Y:0:2017-02-21,7,Y,0,2017-07-07,true,${rule_set_id}\n${rule_set_id},,,,,,,,,,,"
	},
	{
		"id": "c538a3e6-8a92-48ec-8ce7-83f32b1b74c9",
		"family": "ZZ1",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide MMAP Reading Decision Logic",
		"status": "published",
		"event": "MULTIPLE_MEASURE_PLACEMENT",
		"category": "mmComponentPlacementLogic",
		"competencyMapDiscipline": "ENGLISH",
		"description": "Execute the statewide MMAP Reading decision logic to generate the Multiple Measures, High School Transcript based placement component",
		"ruleSetRowIds": [
			"8e299175-f678-4994-8642-a3dd69b7895c"
		],
		"ruleSetDrl": null,
		"ruleSetDrlValidationCsv": null
	},
	{
		"id": "fc5c4cd0-de54-44fc-b01f-546651ee84f3",
		"family": "ZZ2",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	},
	{
		"id": "dfcaf9fd-0545-4f29-a4eb-47353188c518",
		"family": "ZZ3",
		"engine": "tesuto",
		"version": "1",
		"title": "Statewide Decision Logic",
		"status": "published",
		"event": "PLACEMENT",
		"category": "mmPlacementLogic",
		"competencyMapDiscipline": "ESL",
		"description": "When evaluating an assessment-based placement component and a multiple measures-based placement component, the statewide decision logic selects the highest level and course(s) into which a student can enroll.",
		"ruleSetRowIds": [],
		"ruleSetDrl": "package org.cccnext.tesuto.rules;\n\nimport java.util.Date\nimport java.util.Map\nimport java.lang.Double\nimport java.lang.String\nimport java.util.List\nimport java.util.ArrayList\nimport java.util.HashMap\nimport java.util.Set\nimport java.util.HashSet\nimport java.util.stream.Collectors\nimport org.cccnext.tesuto.rules.view.BasicStudentView\nimport org.cccnext.tesuto.placement.view.PlacementComponentViewDto\nimport org.cccnext.tesuto.placement.view.PlacementRulesSourceDto\nimport org.cccnext.tesuto.placement.view.CompetencyAttributesViewDto\nimport org.cccnext.tesuto.domain.multiplemeasures.VariableSet\nimport org.cccnext.tesuto.domain.multiplemeasures.Fact\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementActionResult\nimport org.cccnext.tesuto.domain.multiplemeasures.PlacementComponentActionResult\n\nimport org.ccctc.common.droolscommon.RulesAction\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponent\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.getHighestAndBestPlacementComponentFromList\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.COMPETENCY_ATTRIBUTES_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.PLACEMENT_COMPONENTS_KEY\nimport function org.cccnext.tesuto.rules.function.DrlFunctions.RULE_SET_ID_KEY\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, true)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"a4f1f0d3-39b0-4b09-930c-1b6a41a580ce\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, no assessment component, isStandalonePlacement, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:41d205b9-1d48-43a7-af45-fd5527b2117c\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() == 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestComponent : PlacementComponentViewDto(standalonePlacement == true, selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, true, false)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(\"NA\");\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"41d205b9-1d48-43a7-af45-fd5527b2117c\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == true) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, true)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n\n// Placement with MMAP component, assessment component, !isSelfReported\nrule \"rule_set_id:${rule_set_id}::rule_id:078177d1-9636-4557-9178-12681e540637\" when\n    map : Map()\n    ruleSetId : String(this == \"${rule_set_id}\") from map.get(RULE_SET_ID_KEY())\n    placementComponents : PlacementRulesSourceDto(mmapPlacementComponents : mmapPlacementComponents, assessmentPlacementComponents : assessmentPlacementComponents) from map.get(PLACEMENT_COMPONENTS_KEY())\n    eval(mmapPlacementComponents.size() > 0)\n    eval(assessmentPlacementComponents.size() > 0)\n    CompetencyAttributesViewDto(optInMultiMeasure == true, useSelfReportedDataForMM == false) from map.get(COMPETENCY_ATTRIBUTES_KEY())\n    bestAssessmentComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponentFromList(placementComponents.assessmentPlacementComponents)\n    bestMmapComponent : PlacementComponentViewDto(selfReported == false) from getHighestAndBestPlacementComponentFromList(placementComponents.mmapPlacementComponents, false, false)\n    bestComponent : PlacementComponentViewDto() from getHighestAndBestPlacementComponent(bestAssessmentComponent, bestMmapComponent)\n    then\n        List<RulesAction> actions = (List<RulesAction>) map.get(\"actions\");\n        PlacementActionResult placement = new PlacementActionResult();\n        placement.setCccid(bestComponent.getCccid());\n        placement.setCb21Code(bestComponent.getCb21().getCb21Code());\n        placement.setCourseGroup(bestComponent.getCourseGroup());\n        placement.setCollegeId(bestComponent.getCollegeId());\n        placement.setSubjectAreaId(bestComponent.getSubjectAreaId());\n        placement.setSubjectAreaVersion(bestComponent.getSubjectAreaVersion());\n        placement.setCreatedOn(new Date());\n        Set<String> placementComponentIds = new HashSet<>();\n        placementComponentIds.add(bestAssessmentComponent.getId());\n        placementComponentIds.add(bestMmapComponent.getId());\n        placement.setPlacementComponentIds(placementComponentIds);\n        placement.setElaIndicator(bestAssessmentComponent == null ? \"NA\" : bestAssessmentComponent.getElaIndicator());\n        placement.setTrackingId(bestComponent.getTrackingId());\n        placement.setRuleSetId(ruleSetId);\n        placement.setRuleId(\"078177d1-9636-4557-9178-12681e540637\");\n        RulesAction action = new RulesAction(\"PLACEMENT_ACTION\");\n        action.addActionParameter(\"placement\", placement);\n        actions.add(action);\nend\n",
		"ruleSetDrlValidationCsv": "fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,fact,result,result,result,result,result,result,result,result,result,result,result\nruleSetId,optInMultiMeasure,useSelfReportedData,mmapComponent,mmapComponent,mmapComponent,mmapComponent,mmapComponent,assessComponent,assessComponent,assessComponent,assessComponent,assessComponent,cccid,cb21Code,courseGroup,collegeId,subjectAreaId,subjectAreaVersion,ruleSetId,ruleId,placementComponentIds,elaIndicator,trackingId\n${rule_set_id},true,true,1:12345:C:3:2017-01-01:1:college:1:1:true:true:ela1:12345,,,,,,,,,,12345,C,1,college,1,1,${rule_set_id},a4f1f0d3-39b0-4b09-930c-1b6a41a580ce,1,NA,12345\n${rule_set_id},true,false,1:12345:A:1:2017-01-01:1:college:1:1:false:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12350,A,1,college,1,1,${rule_set_id},078177d1-9636-4557-9178-12681e540637,1:6,ela6,12350\n${rule_set_id},true,true,1:12345:A:1:2017-03-01:1:college:1:1:true:false:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:false:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:false:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:false:ela5:12349,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,12345,A,1,college,1,1,${rule_set_id},c6db8be1-fffa-4cf8-8fa7-fd9086ca07ff,1:6,ela6,12345\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,12348,D,1,college,1,1,${rule_set_id},41d205b9-1d48-43a7-af45-fd5527b2117c,4,NA,12348\n${rule_set_id},false,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:false:false:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:false:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,1:12345:A:1:2017-03-01:1:college:1:1:true:true:ela1:12345,2:12346:B:2:2017-02-01:1:college:1:1:true:true:ela2:12346,3:12347:C:3:2017-03-01:1:college:1:1:true:true:ela3:12347,4:12348:D:4:2017-04-01:1:college:1:1:true:true:ela4:12348,5:12349:E:5:2017-05-01:1:college:1:1:true:true:ela5:12349,,,,,,,,,,,,,,\n${rule_set_id},true,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n${rule_set_id},false,false,,,,,,6:12350:A:1:2017-01-02:1:college:1:1:false:false:ela6:12350,7:12351:B:2:2017-02-02:1:college:1:1:false:false:ela7:12351,8:12352:C:3:2017-03-02:1:college:1:1:false:false:ela8:12352,9:12353:D:4:2017-04-02:1:college:1:1:false:false:ela9:12353,10:12354:E:5:2017-05-02:1:college:1:1:false:false:ela10:12354,,,,,,,,,\n"
	}
]