#static values between environments
tesuto.admin.landing.page=/home
tesuto.student.landing.page=/student

tesuto.unauthorized.landing.page=/error?error=UNAUTHORIZED

aws.multiple.measure.request.queue.url=https://sqs.us-west-2.amazonaws.com/035922915890/assess-ci-POC
cloud.aws.region.static=us-west-2

activation.server.context=activation-service
activation.http.port=8081
activation.server.port=8441

admin.server.context=admin-service
admin.http.port=8082
admin.server.port=8442

#ui
tesuto.service.host=localhost
tesuto.service.scheme=http
ui.http.port=8092
ui.server.context=
ui.server.port=8452

ui.jsp.service.scheme=https
ui.jsp.http.port=8092
ui.jsp.server.context=
ui.jsp.server.port=8443

content.server.context=content-service
content.http.port=8084
content.server.port=8444

#8185 has tcp6
delivery.server.context=delivery-service
delivery.server.port=8445
delivery.http.port=8185

placement.server.context=placement-service
placement.http.port=8086
placement.server.port=8446

rules.server.context=rules-service
rules.http.port=8090
rules.server.port=8450

http.originating.client.port=x-forwarded-port
http.originating.protocol=x-forwarded-proto



# environmentally dependent variables
access.control.allow.origin=https://localhost:${server.port}

tesuto.allowed.admin.roles=LOCAL_ADMIN,PROCTOR,FACULTY,SUPER_ADMIN,PAPER_PENCIL_SCORER,REMOTE_PROCTOR,COUNSELOR,PLACEMENT_READ_ONLY,PLACEMENT_MANAGER,REMOTE_PROCTORING_MANAGER

mitre.clientURL=https://localhost:8443/login
oauth.base.url=http://localhost:8080/openid-connect-server-webapp
oauth.clientId=tesuto_api
oauth.clientSecret=2b4af75b-a77b-45cf-baee-e316ac2f6eb6
OAUTH_CLIENT_ID=${oauth.clientId}
OAUTH_CLIENT_SECRET=${oauth.clientSecret}
openid.base.endpoint=${oauth.base.url}
openid.client.id=${oauth.clientId}
openid.client.secret=${oauth.clientSecret}
openid.jwk.endpoint=${oauth.base.url}/jwk
openid.serverURL=http://localhost:8080/openid-connect-server-webapp/

#mitre.clientURL=https://localhost:8443/login
#oauth.base.url=http://login.test.cccmypath.org/f
#oauth.clientId=assess_api
#test clientSecret
#oauth.clientSecret=AI_OL8EGr5HRN3Bl0DkJu3wTHo1bIQH76vB7FE3NxARtn9yEVixEc6ImAI-1Mp05pm5DjOPCo_9cQg2D22Gy81E
#ci clientSecred
#oauth.clientSecret=LDiVp9r6o3BHwi9mCd1hHQpbyRespB_HeqWlJYC8JsFjcksJ0pzfrIW0REky3zTersHfBZ7dxcPU1W9L9EOhGA
#OAUTH_CLIENT_ID=${oauth.clientId}
#OAUTH_CLIENT_SECRET=${oauth.clientSecret}
#openid.base.endpoint=${oauth.base.url}
#openid.client.id=${oauth.clientId}
#openid.client.secret=${oauth.clientSecret}
#openid.jwk.endpoint=${oauth.base.url}/jwk
#openid.serverURL=http://login.test.cccmypath.org/f/

spring.session.store-type=redis
REDIS_HOST_NAME=localhost
REDIS_PORT=6379
spring.redis.host=${REDIS_HOST_NAME}
spring.redis.password=
spring.redis.port=${REDIS_PORT}

spring.redis.lettuce.pool.max-active=7
spring.redis.lettuce.pool.max-idle=7
spring.redis.lettuce.pool.min-idle=2
spring.redis.lettuce.pool.max-wait=-1ms
spring.redis.lettuce.shutdown-timeout=200ms

spring.data.redis.repositories.enabled=true


server.ssl.key-store=classpath:keystore.jks
server.ssl.key-store-password=changeit
server.ssl.enabled=true

#timeout is in milliseconds but -1 is infinite
server.connection-timeout=-1

spring.session.redis.namespace=assess

spring.main.allow-bean-definition-overriding=true

static.storage.bucket=ccc-dev-assess-resource
static.storage.local.store.directory=src/test/resources/tesuto-local-resources/
static.storage.s3.key=AKIAJFGPZMJ3CIW3QYGA
static.storage.s3.secret=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
static.storage.s3.use.roles=false


database.driverClassName=org.postgresql.Driver
database.idleConnectionTestPeriod=5
database.initialPoolSize=4
database.maxIdleTime=120
database.maxPoolSize=8
database.minPoolSize=4
database.testConnectionOnCheckin=true
database.testConnectionOnCheckout=false

#MONGO_DB only necessary for delivery and content
MONGO_AUTHENTICATION_DBNAME=admin
MONGO_USER=tesuto
MONGO_DBNAME=tesuto
MONGO_HOST_1=127.0.0.1
MONGO_PASSWORD=tesuto
MONGO_PORT_1=27017

spring.data.mongodb.authentication-database=${MONGO_AUTHENTICATION_DBNAME}
spring.data.mongodb.database=${MONGO_DBNAME}
spring.data.mongodb.host=${MONGO_HOST_1}
spring.data.mongodb.password=${MONGO_PASSWORD}
spring.data.mongodb.username=${MONGO_USER}
spring.profiles.active=local-queue,local
https.protocols=TLSv1,TLSv1.1,TLSv1.2
