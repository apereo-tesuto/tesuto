<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
       xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.2.xsd
        http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
        http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
                http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    
    <import resource="minimum-application-context.xml" />
     <!-- <import resource="delivery-context.xml" /> -->
    
    <bean id="childExpressionEvaluationServiceDomain" class="org.cccnext.tesuto.importer.qti.service.validate.ChildExpressionEvaluationServiceImport" />

    <bean id="expressionEvaluationServiceDomain" class="org.cccnext.tesuto.content.service.scoring.ExpressionEvaluationService">
        <property name="childExpressionEvaluationService" ref="childExpressionEvaluationServiceDomain" />
    </bean>

    <bean id="validationUtil" class="org.cccnext.tesuto.util.ValidationUtil">
        <property name="useFullBranchRuleEvaluation" value="${full.branch.rule.evaluation:false}" />
    </bean>

    <bean id="validateAssessmentService" class="org.cccnext.tesuto.importer.qti.service.validate.ValidateAssessmentServiceImpl" >
        <property name="expressionEvaluationService" ref="expressionEvaluationServiceDomain" />
    </bean>

    <bean id="validateAssessmentItemService" class="org.cccnext.tesuto.importer.qti.service.validate.ValidateAssessmentItemServiceImpl" >
    </bean>
    

	
	<bean id="zipFileExtractor" class="org.cccnext.tesuto.domain.util.ZipFileExtractor" />
	<bean id="zipFileCompressor" class="org.cccnext.tesuto.domain.util.ZipFileCompressor" />
	
	<!-- Qti Works -->
	<bean id="jqtiExtensionManager" class="uk.ac.ed.ph.jqtiplus.JqtiExtensionManager">
		<constructor-arg>
			<!-- this is a varargs param, so it has to be an empty list -->
			<list>
			</list>
		</constructor-arg>
	</bean>
	<!-- This is backed by a Map. Worry about memory leaks -->
	<bean id="schemaCache" class="uk.ac.ed.ph.jqtiplus.xmlutils.SimpleSchemaCache" />
	<bean id="qtiXmlReader" class="uk.ac.ed.ph.jqtiplus.reading.QtiXmlReader">
		<constructor-arg ref="jqtiExtensionManager" />
		<constructor-arg ref="schemaCache" />
	</bean>
	<bean id="simpleJqtiFacade" class="uk.ac.ed.ph.jqtiplus.SimpleJqtiFacade" />
	<bean id="qtiSerializer" class="uk.ac.ed.ph.jqtiplus.serialization.QtiSerializer"
		factory-bean="simpleJqtiFacade" factory-method="createQtiSerializer" />
	<!-- Service Class for Seed data only -->
    <!-- Each bean will be loaded upon initialization -->
    <!-- Although we won't need each bean for every test case this seems the 
        most elegant approach and a worthy trade off to reduce the size of our larger 
        test cases -->
    <bean id="mathSeedDataService"
          class="org.cccnext.tesuto.importer.qti.qa.ParseFileService">
        <constructor-arg value="seed_documents" name="parentFolder" />
        <constructor-arg value="Math_Sample_Full.zip" name="fileName" />
        <constructor-arg value="false" />
    </bean>
    <bean id="mathPaperSeedDataService"
          class="org.cccnext.tesuto.importer.qti.qa.ParseFileService">
        <constructor-arg value="seed_documents" name="parentFolder" />
        <constructor-arg value="Math_Sample_Full_Paper.zip" name="fileName" />
        <constructor-arg value="false" />
    </bean>
    <bean id="elaSeedDataService"
          class="org.cccnext.tesuto.importer.qti.qa.ParseFileService">
        <constructor-arg value="seed_documents" name="parentFolder" />
        <constructor-arg value="ELA_Sample_Full.zip" />
        <constructor-arg value="false" />
    </bean>
    <bean id="elaPaperSeedDataService"
          class="org.cccnext.tesuto.importer.qti.qa.ParseFileService">
        <constructor-arg value="seed_documents" name="parentFolder" />
        <constructor-arg value="ELA_Sample_Full_Paper.zip" />
        <constructor-arg value="false" />
    </bean>
    <bean id="interactionSeedDataService"
          class="org.cccnext.tesuto.importer.qti.qa.ParseFileService">
        <constructor-arg value="seed_documents" name="parentFolder" />
        <constructor-arg value="Interaction_Examples.zip" />
        <constructor-arg value="false" />
    </bean>
    <bean id="interactionPaperSeedDataService"
          class="org.cccnext.tesuto.importer.qti.qa.ParseFileService">
        <constructor-arg value="seed_documents" name="parentFolder" />
        <constructor-arg value="Interaction_Examples_Paper.zip" />
        <constructor-arg value="false" />
    </bean>
		<!-- Choose only "s3 or "local" but not both! -->
	<beans profile="s3">
		<!-- Amazon S3 -->
		<bean id="staticStorage" name="staticStorage"
			class="org.cccnext.tesuto.domain.util.S3Storage">
			<constructor-arg name="key" value="${static.storage.s3.key}" />
			<constructor-arg name="secret" value="${static.storage.s3.secret}" />
			<constructor-arg name="useRoles"
				value="${static.storage.s3.use.roles}" />
		</bean>
		<bean id="resourceRelocator"
			class="org.cccnext.tesuto.importer.qti.service.QtiResourceRelocator">
			<property name="staticStorage" ref="staticStorage" />
		</bean>

	</beans>
	<beans profile="local">
		<!-- Local Filesystem -->
		<bean id="staticStorage" name="staticStorage"
			class="org.cccnext.tesuto.domain.util.LocalStorage">
			<constructor-arg name="localDirectory"
				value="${static.storage.local.store.directory}" />
		</bean>
		<bean id="resourceRelocator"
			class="org.cccnext.tesuto.importer.qti.service.QtiResourceRelocator">
			<property name="staticStorage" ref="staticStorage" />
		</bean>
	</beans>
	
	
  </beans>
